{"paragraphs":[{"text":"%pyspark\nimport nltk\nnltk.download('wordnet')","user":"anonymous","dateUpdated":"2018-10-02T14:47:31+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[nltk_data] Downloading package wordnet to /root/nltk_data...\n[nltk_data]   Package wordnet is already up-to-date!\nTrue\n"}]},"apps":[],"jobName":"paragraph_1538353431833_-366617212","id":"20181001-002351_92081395","dateCreated":"2018-10-01T00:23:51+0000","dateStarted":"2018-10-02T14:47:31+0000","dateFinished":"2018-10-02T14:47:31+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3604"},{"text":"%pyspark\ntokensDF = spark.read.json(\"/share_dir/attack_westminster_small_tokenized.json\")\ntokensDF.show()\nfreqTokensDF = spark.read.json('/share_dir/attack_westminster_small_freq_tokens.json')\nfreqTokensDF.show()","user":"anonymous","dateUpdated":"2018-10-02T14:47:32+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+--------------------+--------------------+--------------------+--------------------+\n|         originalUrl|                text|               title|              tokens|        tokens_lower|\n+--------------------+--------------------+--------------------+--------------------+--------------------+\n|https://www.thegu...|London attack: po...|Westminster attac...|[London, attack, ...|[london, attack, ...|\n|http://news.sky.c...|London hospitals ...|Anti-terror barri...|[London, hospital...|[london, hospital...|\n|https://www.thegu...|The mind goes num...|The numbing after...|[The, mind, goes,...|[the, mind, goes,...|\n|http://www.financ...|Five people died ...|London terror att...|[Five, people, di...|[five, people, di...|\n|https://www.newst...|People in Westmin...|People in Westmin...|[People, Westmins...|[people, westmins...|\n|https://www.buzzf...|The Metropolitan ...|Here's The Misinf...|[The, Metropolita...|[the, metropolita...|\n|http://news.googl...|Media captionFoot...|London attack: Fo...|[Media, captionFo...|[media, captionfo...|\n|https://www.stand...|Popular Videos Kh...|Taliban bomb-make...|[Popular, Videos,...|[popular, videos,...|\n|http://www.unilad...|Not Found This is...|Page not found - ...|[Not, Found, This...|[not, found, this...|\n|https://www.rt.co...|Ellwood, who has ...|British politicia...|[Ellwood, MP, Bou...|[ellwood, mp, bou...|\n|http://www.opinie...|[phpBB Debug] PHP...|Muslim leaders ho...|[phpBB, Debug, PH...|[phpbb, debug, ph...|\n|https://uk.news.y...|Phillip Schofield...|Phillip Schofield...|[Phillip, Schofie...|[phillip, schofie...|\n|https://www.thegu...|PM visits injured...|Westminster attac...|[PM, visits, inju...|[pm, visits, inju...|\n|https://www.expre...|Express.co.uk rel...|London terror att...|[Express.co.uk, r...|[express.co.uk, r...|\n|http://www.watfor...|Watford Muslims j...|'Love for all, ha...|[Watford, Muslims...|[watford, muslims...|\n|https://www.ft.co...|Subscribe to the ...|Subscribe to read...|[Subscribe, FT, r...|[subscribe, ft, r...|\n|https://stv.tv/ne...|Postcode iThere a...|Police officer st...|[Postcode, iThere...|[postcode, ithere...|\n|http://terrorism....|Officer who witne...|Officer who witne...|[Officer, witness...|[officer, witness...|\n|http://www.reuter...|Video shows injur...|Video shows injur...|[Video, shows, in...|[video, shows, in...|\n|http://www.expres...|POLICE officers a...|Police told NOT t...|[POLICE, officers...|[police, officers...|\n+--------------------+--------------------+--------------------+--------------------+--------------------+\nonly showing top 20 rows\n\n+-----+------------+\n|count|        word|\n+-----+------------+\n|  212|     islamic|\n|  210|         way|\n|  209|       prime|\n|  209|          uk|\n|  208|      palace|\n|  206|metropolitan|\n|  205|       there|\n|  204|      number|\n|  203|       scene|\n|  203|        died|\n|  201|  government|\n|  198|        work|\n|  197|          pm|\n|  195|      images|\n|  193|    thursday|\n|  193|     britain|\n|  192|        home|\n|  191|         n't|\n|  190|      houses|\n|  189| pedestrians|\n+-----+------------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1538352461819_-919374162","id":"20181001-000741_1910206221","dateCreated":"2018-10-01T00:07:41+0000","dateStarted":"2018-10-02T14:47:32+0000","dateFinished":"2018-10-02T14:47:33+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3605"},{"text":"%pyspark\ndef getSynsets(word):\n    from nltk.corpus import wordnet as wn\n    return set(x.name() for x in wn.synsets(word))\nwordnet = set(freqTokensDF.rdd.flatMap(lambda x: getSynsets(x.word)).collect())\ncounter = Counter(tokensDF.rdd.flatMap(lambda x: x.tokens).flatMap(getSynsets).filter(lambda x: x in wordnet).collect())\ncountDF = spark.createDataFrame(counter.most_common(100), ['synset', 'count'])\ncountDF.show(n=20, truncate=False)","user":"anonymous","dateUpdated":"2018-10-02T14:47:47+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"0":{"graph":{"mode":"table","height":624,"optionOpen":false}}},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----------------+-----+\n|synset          |count|\n+----------------+-----+\n|attack.v.02     |2147 |\n|assail.v.01     |2136 |\n|patrol.v.01     |2084 |\n|police.n.01     |2071 |\n|attack.v.05     |2059 |\n|attack.v.01     |2059 |\n|attack.v.03     |2059 |\n|attack.v.06     |2059 |\n|attack.n.05     |2037 |\n|fire.n.09       |2015 |\n|approach.n.01   |2015 |\n|attack.n.01     |1996 |\n|attack.n.09     |1995 |\n|attack.n.08     |1995 |\n|attack.n.07     |1995 |\n|attack.n.06     |1995 |\n|attack.n.02     |1995 |\n|one.n.01        |1880 |\n|one.s.01        |1776 |\n|westminster.n.01|1327 |\n+----------------+-----+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1538352832478_327965504","id":"20181001-001352_1392683382","dateCreated":"2018-10-01T00:13:52+0000","dateStarted":"2018-10-02T14:47:47+0000","dateFinished":"2018-10-02T14:47:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3606"},{"text":"%pyspark\ndef getLemmas(word):\n    from nltk.corpus import wordnet as wn\n    synsets = wn.synsets(word)\n    lemmas = []\n    for s in synsets:\n        lemmas += s.lemma_names()\n    return set(lemmas)\nwordnet = set(freqTokensDF.rdd.flatMap(lambda x: getLemmas(x.word)).collect())\ncounter = Counter(tokensDF.rdd.flatMap(lambda x: x.tokens).flatMap(getLemmas).filter(lambda x: x in wordnet).collect())\ncountDF = spark.createDataFrame(counter.most_common(100), ['lemma', 'count'])\ncountDF.show(n=20, truncate=False)","user":"anonymous","dateUpdated":"2018-10-02T14:48:01+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"0":{"graph":{"mode":"table","height":434,"optionOpen":false}}},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------+-----+\n|lemma   |count|\n+--------+-----+\n|get     |3743 |\n|take    |3693 |\n|make    |2883 |\n|go      |2876 |\n|hold    |2777 |\n|see     |2727 |\n|round   |2442 |\n|blast   |2352 |\n|attempt |2348 |\n|approach|2271 |\n|attack  |2230 |\n|assault |2190 |\n|police  |2173 |\n|fire    |2165 |\n|lash_out|2147 |\n|snipe   |2147 |\n|assail  |2147 |\n|set_on  |2136 |\n|work    |2123 |\n|pass    |2107 |\n+--------+-----+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1538353835546_-185871230","id":"20181001-003035_1453901627","dateCreated":"2018-10-01T00:30:35+0000","dateStarted":"2018-10-02T14:48:01+0000","dateFinished":"2018-10-02T14:48:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3607"},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2018-10-01T01:39:33+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1538357973015_-1712479473","id":"20181001-013933_1093735432","dateCreated":"2018-10-01T01:39:33+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:3608"}],"name":"Unit 2","id":"2DR7W5RWM","noteParams":{},"noteForms":{},"angularObjects":{"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}